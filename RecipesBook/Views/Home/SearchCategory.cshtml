@model SearchCategoryViewModel
@{
    ViewData["Title"] = "Categories";
}
@Html.ActionLink("Search recipe", "SearchRecipe", new { controller = "Home" }, new { @class = "btn btn-primary" })
<form asp-action="SearchCategory" asp-controller="Home" class="form-inline mt-3"
      method="post"
      data-ajax="true"
      data-ajax-mode="replace" data-ajax-update="#results">

    <label for="search" class="mx-2">Enter name:</label>
    @Html.TextBoxFor(model => model.search, new { @class = "form-control p-3" })


    <input type="submit" value="Search" class="btn btn-success" />
</form>
<h1>Categories</h1>


<div id="results" class="row">
    <partial name="ViewCategories" model="@Model.filteredCategories" />
</div>
<nav class="nav-pagination">
    <ul class="pagination justify-content-center">
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
        </li>
        @for (int i = 0; i < Model.filteredCategories.Count(); i++)
        {
            <li class="page-item"><a class="page-link" href="?page=@(i+1)">@(i+1)</a></li>
        }


        <li class="page-item">
            <a class="page-link" href="#">Next</a>
        </li>
    </ul>
</nav>








@section Scripts{
    <script>

        var results = $("#Results");
        var onBegin = function () {
            results.html('<img src="~/images/ajax-loader.gif" alt="Loading" />');
        };

        var onComplete = function () {
            results.html("");
        };

        var onSuccess = function (context) {
            alert(context);
        };

        var onFailed = function (context) {
            alert("Failed");
        };

    </script>
}
